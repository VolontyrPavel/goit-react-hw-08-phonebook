{"version":3,"file":"static/js/981.6a55282f.chunk.js","mappings":"mPAMaA,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOR,MACf,IAAK,OACHC,EAAQM,EAAEC,OAAOC,OACjB,MAEF,IAAK,QACHN,EAASI,EAAEC,OAAOC,OAMvB,EAEKC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAmB9BC,EAAQ,WACZZ,EAAQ,IACRE,EAAS,GACV,EAED,OACE,kBAAMW,SAvBa,SAAAP,GACnBA,EAAEQ,iBACF,IAAMC,EAAU,CACdhB,KAAMA,EACNiB,OAAQf,GAMV,GAJsBQ,EAAgBQ,MACpC,SAAAC,GAAc,OACZA,EAAenB,KAAKoB,gBAAkBJ,EAAQhB,KAAKoB,aADvC,IAId,OAAOC,MAAM,GAAD,OAAIL,EAAQhB,KAAZ,4BAEdI,GAASkB,EAAAA,EAAAA,IAAWN,IACpBH,GACD,EAQC,WACE,qCAEE,kBACEU,KAAK,OACLvB,KAAK,OACLwB,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUrB,EACVG,MAAOT,QAGX,sCAEE,kBACEuB,KAAK,MACLvB,KAAK,QACLwB,QAAQ,qGACRC,MAAM,8FACNC,UAAQ,EACRC,SAAUrB,EACVG,MAAOP,QAGX,mBAAQqB,KAAK,SAAb,2BAGL,E,UC3EYK,EAAS,WACpB,IAAMxB,GAAWC,EAAAA,EAAAA,MACXwB,GAASlB,EAAAA,EAAAA,IAAYmB,EAAAA,IAC3B,OACE,sDAEE,kBACEP,KAAK,OACLvB,KAAK,SACLwB,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,EACRjB,MAAOoB,EACPF,SAAU,SAACpB,GAAD,OAAOH,GAAS2B,EAAAA,EAAAA,GAAUxB,EAAEC,OAAOC,OAAnC,MAIjB,EChBYuB,EAAc,WACzB,IAAMC,GAAWtB,EAAAA,EAAAA,IAAYuB,EAAAA,IACvB9B,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACG4B,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,OAAb,OACZ,2BACE,yBACGjB,EADH,KACWiB,MAEX,mBAAQM,KAAK,SAASc,QAAS,kBAAMjC,GAASkC,EAAAA,EAAAA,IAAcF,GAA7B,EAA/B,sBAJOA,EADG,KAYnB,ECMD,EAnBiB,WACf,IAAMhC,GAAWC,EAAAA,EAAAA,MACX4B,GAAWtB,EAAAA,EAAAA,IAAYC,EAAAA,IAK7B,OAHA2B,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,KAEF,4BACE,uCACA,SAACN,EAAD,KACA,sCACA,SAAC8B,EAAD,IACqB,IAApBK,EAASQ,SAAgB,8CAC1B,SAACT,EAAD,MAGL,C","sources":["components/ContactForm.jsx","components/Filter.jsx","components/ContactList.jsx","page/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport { useState } from 'react';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors'\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'phone':\n        setPhone(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const contactsInStore = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name: name,\n      number: phone,\n    };\n    const findedContact = contactsInStore.find(\n      contactInStore =>\n        contactInStore.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (findedContact) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={phone}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","import { setFilter } from 'redux/Slice/filterSlice';\nimport { selectFilter } from \"redux/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={(e) => dispatch(setFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\n","import { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"redux/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\n\nimport { ContactForm } from '../components/ContactForm';\nimport { Filter } from '../components/Filter';\nimport { ContactList } from '../components/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {contacts.length === 0 && <p>Contacts no found</p>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","useState","name","setName","phone","setPhone","dispatch","useDispatch","handleChange","e","target","value","contactsInStore","useSelector","selectContacts","reset","onSubmit","preventDefault","contact","number","find","contactInStore","toLowerCase","alert","addContact","type","pattern","title","required","onChange","Filter","filter","selectFilter","setFilter","ContactList","contacts","selectVisibleContacts","map","id","onClick","deleteContact","useEffect","fetchContacts","length"],"sourceRoot":""}