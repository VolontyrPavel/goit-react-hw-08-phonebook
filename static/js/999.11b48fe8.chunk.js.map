{"version":3,"file":"static/js/999.11b48fe8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Loader.jsx","page/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"div\":\"ContactForm_div__c--u9\",\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { useState } from 'react';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'phone':\n        setPhone(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const contactsInStore = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name: name,\n      number: phone,\n    };\n    const findedContact = contactsInStore.find(\n      contactInStore =>\n        contactInStore.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (findedContact) {\n      return alert(`${contact.name} is already in contacts`);\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <div >\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={handleChange}\n          value={name}\n        />\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Phone\"\n          onChange={handleChange}\n          value={phone}\n        />\n        <button type=\"submit\" name=\"next\" className={css.button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { setFilter } from 'redux/Slice/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <label>\n      Find contacts by name\n      <input\n      className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Name\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </label>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"ContactList_ul__ppW9Q\",\"contact\":\"ContactList_contact__0STHS\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\",\"button\":\"ContactList_button__7kL4l\"};","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul className={css.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={css.contact}>\n          <h3 className={css.name}>{name}</h3>\n          <span className={css.number}>{number}</span>\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))} className={css.button}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n    />\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectLoading, selectError } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\n\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Loader } from '../components/Loader'\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      {contacts.length === 0 && <p>Contacts no found</p>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","useState","name","setName","phone","setPhone","dispatch","useDispatch","handleChange","e","target","value","contactsInStore","useSelector","selectContacts","reset","onSubmit","preventDefault","contact","number","find","contactInStore","toLowerCase","alert","addContact","className","css","type","placeholder","onChange","Filter","filter","selectFilter","setFilter","ContactList","contacts","selectVisibleContacts","map","id","onClick","deleteContact","Loader","height","width","radius","color","ariaLabel","loading","selectLoading","error","selectError","useEffect","fetchContacts","length"],"sourceRoot":""}